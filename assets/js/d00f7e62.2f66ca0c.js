"use strict";(self.webpackChunksolus_help_center=self.webpackChunksolus_help_center||[]).push([[255],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),g=r,k=c["".concat(p,".").concat(g)]||c[g]||d[g]||o;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2731:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={title:"Your First Package Update",summary:"An example of how to build a package that exists in the Solus repos for new packagers."},i="Your First Package Update",l={unversionedId:"packaging/your-first-package-update",id:"packaging/your-first-package-update",title:"Your First Package Update",description:"This page will guide you through the steps required to build your first package. This is really a test to make sure that your build environment is set up correctly. You will clone an existing package, build it, then install it, and finally remove it.",source:"@site/docs/packaging/your-first-package-update.md",sourceDirName:"packaging",slug:"/packaging/your-first-package-update",permalink:"/docs/packaging/your-first-package-update",draft:!1,editUrl:"https://github.com/getsolus/help-center-docs/tree/master/docs/packaging/your-first-package-update.md",tags:[],version:"current",lastUpdatedAt:1695049983,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{title:"Your First Package Update",summary:"An example of how to build a package that exists in the Solus repos for new packagers."},sidebar:"packagingSidebar",previous:{title:"Requesting a Package",permalink:"/docs/packaging/procedures/request-a-package"}},p={},s=[{value:"Cloning and building <code>nano</code>",id:"cloning-and-building-nano",level:2},{value:"Installing Your New <code>nano</code> Package",id:"installing-your-new-nano-package",level:2},{value:"Returning to the Repository version (optional)",id:"returning-to-the-repository-version-optional",level:2}],u={toc:s},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"your-first-package-update"},"Your First Package Update"),(0,r.kt)("p",null,"This page will guide you through the steps required to build your first package. This is really a test to make sure that your ",(0,r.kt)("a",{parentName:"p",href:"/docs/packaging/prepare-for-packaging"},"build environment is set up correctly"),". You will clone an existing package, build it, then install it, and finally remove it."),(0,r.kt)("h2",{id:"cloning-and-building-nano"},"Cloning and building ",(0,r.kt)("inlineCode",{parentName:"h2"},"nano")),(0,r.kt)("p",null,"For this example we will use the text editor ",(0,r.kt)("inlineCode",{parentName:"p"},"nano"),"."),(0,r.kt)("p",null,"Change to your packaging directory. Your directory may have a different name or location:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/solus-builds\n")),(0,r.kt)("p",null,"Clone the ",(0,r.kt)("inlineCode",{parentName:"p"},"nano")," repository, then change into it:\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"make nano.clone")," command will clone the ",(0,r.kt)("inlineCode",{parentName:"p"},"nano")," package repository ",(0,r.kt)("inlineCode",{parentName:"p"},"https://github.com/solus-packages/nano")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make nano.clone\ncd nano\n")),(0,r.kt)("p",null,'Increase the release number by one ("bump" the package) and then check the results:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make bump\ngit diff\n")),(0,r.kt)("p",null,"You should see output from git similar to the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"diff --git a/package.yml b/package.yml\nindex 2ff1756..4bc344c 100644\n--- a/package.yml\n+++ b/package.yml\n@@ -1,6 +1,6 @@\n name       : nano\n version    : '7.2'\n-release    : 161\n+release    : 162\n source     :\n     - https://www.nano-editor.org/dist/v7/nano-7.2.tar.xz : 86f3442768bd2873cec693f83cdf80b4b444ad3cc14760b74361474fc87a4526\n homepage   : https://www.nano-editor.org\n")),(0,r.kt)("p",null,"Next, build the package:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make\n")),(0,r.kt)("p",null,"You will be prompted to enter your password by sudo, and the ",(0,r.kt)("inlineCode",{parentName:"p"},"solbuild")," tool will build the package.\nIf the build is successful, you will have a ",(0,r.kt)("inlineCode",{parentName:"p"},"nano")," package file with a name like ",(0,r.kt)("inlineCode",{parentName:"p"},"nano-7.2-161-1-x86_64.eopkg"),". Run the ",(0,r.kt)("inlineCode",{parentName:"p"},"ls")," tool to check the exact name:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls\n\nabi_used_libs     files       package.yml\nabi_used_symbols  Makefile  nano-7.2-162-1-x86_64.eopkg  pspec_x86_64.xml\n")),(0,r.kt)("p",null,"Congratulations! You have successfully built your first package on Solus."),(0,r.kt)("h2",{id:"installing-your-new-nano-package"},"Installing Your New ",(0,r.kt)("inlineCode",{parentName:"h2"},"nano")," Package"),(0,r.kt)("p",null,"To install your new ",(0,r.kt)("inlineCode",{parentName:"p"},"nano")," package, run the following command. Your filename will probably be slightly different."),(0,r.kt)("p",null,"This is done so you can test that the package works as expected. Each package submission will require you to describe what testing you did."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo eopkg it nano-7.2-162-1-x86_64.eopkg\n")),(0,r.kt)("p",null,"Testing ",(0,r.kt)("inlineCode",{parentName:"p"},"nano")," is pretty easy. Testing other packages may be more complicated, depending on what they do."),(0,r.kt)("p",null,"To test your newly built ",(0,r.kt)("inlineCode",{parentName:"p"},"nano")," package, simply run it on command line, then make sure you can edit and save a file."),(0,r.kt)("h2",{id:"returning-to-the-repository-version-optional"},"Returning to the Repository version (optional)"),(0,r.kt)("p",null,"It is a good idea to remove the package you built, and return to the repository version, once you are done testing."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo eopkg it --reinstall nano\n")))}d.isMDXComponent=!0}}]);